#include <SoftwareSerial.h>

#define zapper_rx 3  
#define zapper_tx 4  
#define zapper_btn 5
#define target_rx 6
#define target_tx 7
#dedine target_btn 8
#define rgb_r 9
#define rgb_g 10
#define rgb_b 11
int freq = 9600;
char cab[10] = ""; // rider phone.
char player[10] = ""; // player phone.
int team = 0;
char msg[64] = "";
int shots = 0;
int lvl = 0;


SoftwareSerial targetSerial =  SoftwareSerial(target_rx, target_tx);
SoftwareSerial zapperSerial = SoftwareSerial(zapper_rx, zapper_tx);
void setup()  
{
  pinMode(rgb_r, OUTPUT);
  pinMode(rgb_g, OUTPUT);
  pinMode(rgb_b, OUTPUT);
  pinMode(shoot_btn,INPUT_PULLUP);
  pinMode(heal_btn, INPUT_PULLUP);
  targetSerial.begin(freq);
  zapperSerial.begin(freq);
  Serial.begin(freq);
  Serial.println("OK");
}
void trx(int mode, char m) {
  msg += mode;
  msg += ",";
  msg += cab;
  msg += ","
  msg += player;
  msg += ",";
  msg += team;
  msg += ",";
  msg += lvl;
  msg += ",";
  msg += ac;
  msg += m;
  irTx.println(msg);
  msg = "";
}
void rtx(m) {

}
void loop() 
{
  shootState = digitalRead(shoot_btn);
  healState = digitalRead(heal_btn);
  if (shootState == HIGH) {
    trigger_out(0);
  } else if (healState == HIGH) {
    trigger_out(1);
  } else if (irTx.available()) {
    while (irTx.available()) {
      a = (char)irTx.readString();
      trigger_in(a);
      Serial.println(a);
    }
  } else if (Serial.available()) {
    while (Serial.available()) {
      a = Serial.readString;
      // store nick/team/shots/heals/etc...
    }
  }
}
